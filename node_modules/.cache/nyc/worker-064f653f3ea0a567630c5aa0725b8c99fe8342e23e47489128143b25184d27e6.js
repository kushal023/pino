'use strict';const pino=require('../pino.js');const build=require('pino-abstract-transport');const loadTransportStreamBuilder=require('./transport-stream');// This file is not checked by the code coverage tool,
// as it is not reliable.
/* istanbul ignore file */module.exports=async function({targets,levels,dedupe}){targets=await Promise.all(targets.map(async t=>{const fn=await loadTransportStreamBuilder(t.target);const stream=await fn(t.options);return{level:t.level,stream};}));return build(process,{parse:'lines',metadata:true,close(err,cb){let expected=0;for(const transport of targets){expected++;transport.stream.on('close',closeCb);transport.stream.end();}function closeCb(){if(--expected===0){cb(err);}}}});function process(stream){const multi=pino.multistream(targets,{levels,dedupe});// TODO manage backpressure
stream.on('data',function(chunk){const{lastTime,lastMsg,lastObj,lastLevel}=this;multi.lastLevel=lastLevel;multi.lastTime=lastTime;multi.lastMsg=lastMsg;multi.lastObj=lastObj;// TODO handle backpressure
multi.write(chunk+'\n');});}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJwaW5vIiwicmVxdWlyZSIsImJ1aWxkIiwibG9hZFRyYW5zcG9ydFN0cmVhbUJ1aWxkZXIiLCJtb2R1bGUiLCJleHBvcnRzIiwidGFyZ2V0cyIsImxldmVscyIsImRlZHVwZSIsIlByb21pc2UiLCJhbGwiLCJtYXAiLCJ0IiwiZm4iLCJ0YXJnZXQiLCJzdHJlYW0iLCJvcHRpb25zIiwibGV2ZWwiLCJwcm9jZXNzIiwicGFyc2UiLCJtZXRhZGF0YSIsImNsb3NlIiwiZXJyIiwiY2IiLCJleHBlY3RlZCIsInRyYW5zcG9ydCIsIm9uIiwiY2xvc2VDYiIsImVuZCIsIm11bHRpIiwibXVsdGlzdHJlYW0iLCJjaHVuayIsImxhc3RUaW1lIiwibGFzdE1zZyIsImxhc3RPYmoiLCJsYXN0TGV2ZWwiLCJ3cml0ZSJdLCJzb3VyY2VzIjpbIndvcmtlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuY29uc3QgcGlubyA9IHJlcXVpcmUoJy4uL3Bpbm8uanMnKVxuY29uc3QgYnVpbGQgPSByZXF1aXJlKCdwaW5vLWFic3RyYWN0LXRyYW5zcG9ydCcpXG5jb25zdCBsb2FkVHJhbnNwb3J0U3RyZWFtQnVpbGRlciA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0LXN0cmVhbScpXG5cbi8vIFRoaXMgZmlsZSBpcyBub3QgY2hlY2tlZCBieSB0aGUgY29kZSBjb3ZlcmFnZSB0b29sLFxuLy8gYXMgaXQgaXMgbm90IHJlbGlhYmxlLlxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgZmlsZSAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFzeW5jIGZ1bmN0aW9uICh7IHRhcmdldHMsIGxldmVscywgZGVkdXBlIH0pIHtcbiAgdGFyZ2V0cyA9IGF3YWl0IFByb21pc2UuYWxsKHRhcmdldHMubWFwKGFzeW5jICh0KSA9PiB7XG4gICAgY29uc3QgZm4gPSBhd2FpdCBsb2FkVHJhbnNwb3J0U3RyZWFtQnVpbGRlcih0LnRhcmdldClcbiAgICBjb25zdCBzdHJlYW0gPSBhd2FpdCBmbih0Lm9wdGlvbnMpXG4gICAgcmV0dXJuIHtcbiAgICAgIGxldmVsOiB0LmxldmVsLFxuICAgICAgc3RyZWFtXG4gICAgfVxuICB9KSlcbiAgcmV0dXJuIGJ1aWxkKHByb2Nlc3MsIHtcbiAgICBwYXJzZTogJ2xpbmVzJyxcbiAgICBtZXRhZGF0YTogdHJ1ZSxcbiAgICBjbG9zZSAoZXJyLCBjYikge1xuICAgICAgbGV0IGV4cGVjdGVkID0gMFxuICAgICAgZm9yIChjb25zdCB0cmFuc3BvcnQgb2YgdGFyZ2V0cykge1xuICAgICAgICBleHBlY3RlZCsrXG4gICAgICAgIHRyYW5zcG9ydC5zdHJlYW0ub24oJ2Nsb3NlJywgY2xvc2VDYilcbiAgICAgICAgdHJhbnNwb3J0LnN0cmVhbS5lbmQoKVxuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBjbG9zZUNiICgpIHtcbiAgICAgICAgaWYgKC0tZXhwZWN0ZWQgPT09IDApIHtcbiAgICAgICAgICBjYihlcnIpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0pXG5cbiAgZnVuY3Rpb24gcHJvY2VzcyAoc3RyZWFtKSB7XG4gICAgY29uc3QgbXVsdGkgPSBwaW5vLm11bHRpc3RyZWFtKHRhcmdldHMsIHsgbGV2ZWxzLCBkZWR1cGUgfSlcbiAgICAvLyBUT0RPIG1hbmFnZSBiYWNrcHJlc3N1cmVcbiAgICBzdHJlYW0ub24oJ2RhdGEnLCBmdW5jdGlvbiAoY2h1bmspIHtcbiAgICAgIGNvbnN0IHsgbGFzdFRpbWUsIGxhc3RNc2csIGxhc3RPYmosIGxhc3RMZXZlbCB9ID0gdGhpc1xuICAgICAgbXVsdGkubGFzdExldmVsID0gbGFzdExldmVsXG4gICAgICBtdWx0aS5sYXN0VGltZSA9IGxhc3RUaW1lXG4gICAgICBtdWx0aS5sYXN0TXNnID0gbGFzdE1zZ1xuICAgICAgbXVsdGkubGFzdE9iaiA9IGxhc3RPYmpcblxuICAgICAgLy8gVE9ETyBoYW5kbGUgYmFja3ByZXNzdXJlXG4gICAgICBtdWx0aS53cml0ZShjaHVuayArICdcXG4nKVxuICAg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