export type AsyncStub<TArgs extends Readonly<any> = any, TReturnValue = any> = sinon.SinonStub<TArgs[], Promise<TReturnValue>>;
export type NodeFsPromisesMocks = {
    mkdtemp: AsyncStub<any, string>;
    rm: AsyncStub;
    mkdir: AsyncStub;
    stat: AsyncStub;
};
export type Mocks = {
    'node:fs/promises': NodeFsPromisesMocks;
    which: AsyncStub<any, string>;
    execa: AsyncStub<any, Partial<import('execa').ExecaReturnValue>>;
    'node:console': sinon.SinonStubbedInstance<Console>;
    debug: sinon.SinonStub<any, sinon.SinonStub>;
    'node:os': {
        tmpdir: sinon.SinonStub<any, string>;
    };
};
